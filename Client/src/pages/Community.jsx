import React, { useEffect, useState } from "react";
import Loading from "./Loading";
import { useAppContext } from "../context/AppContext";
import toast from "react-hot-toast";

function Community() {
  const [image, setImage] = useState([]);
  const [loading, setLoading] = useState(true);
  const { axios, token } = useAppContext(); // Add token here

  const fetchImages = async () => {
    try {
      console.log("Fetching images with token:", token); // Debug log

      // Add Authorization header like other API calls
      const { data } = await axios.get("/api/user/published-images", {
        headers: { Authorization: token },
      });

      console.log("API Response:", data); // Debug log

      if (data.success) {
        console.log("Images received:", data.images); // Debug log
        setImage(data.images || []);
      } else {
        console.error("API Error:", data.message); // Debug log
        toast.error(data.message || "Failed to fetch images");
        setImage([]);
      }
    } catch (error) {
      console.error("Fetch Error:", error); // Debug log
      toast.error(
        error.response?.data?.message || error.message || "Failed to fetch images"
      );
      setImage([]);
    }
    setLoading(false);
  };

  useEffect(() => {
    if (token) {
      // Only fetch if token exists
      fetchImages();
    } else {
      setLoading(false);
      toast.error("Please login to view community images");
    }
  }, [token]);

  if (loading) return <Loading />;

  return (
    <div className="p-6 pt-12 xl:px-12 2xl:px-20 w-full mx-auto h-full overflow-y-scroll">
      <h2 className="text-xl font-semibold mb-6 text-gray-800 dark:text-purple-100">
        Community Images
      </h2>

      {/* Debug info */}
      <div className="mb-4 text-sm text-gray-500">
        <p>Images count: {image?.length || 0}</p>
        <p>Token exists: {token ? "Yes" : "No"}</p>
      </div>

      {image && image.length > 0 ? (
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-5">
          {image.map((item, index) => {
            console.log("Rendering image:", item); // Debug log
            return (
              <div
                key={index}
                className="relative group block rounded-lg overflow-hidden border border-gray-200 dark:border-purple-700 shadow-sm hover:shadow-md transition-shadow duration-300"
              >
                <img
                  src={item.imageUrl}
                  alt={`Generated by ${item.userName || "Unknown"}`}
                  className="w-full h-40 md:h-50 2xl:h-62 object-cover group-hover:scale-105 transition-transform duration-300 ease-in"
                  onLoad={() =>
                    console.log(`Image ${index + 1} loaded successfully`)
                  }
                  onError={(e) => {
                    console.error(
                      `Image ${index + 1} failed to load:`,
                      item.imageUrl
                    );
                    e.target.src =
                      'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200"><rect width="200" height="200" fill="%23ddd"/><text x="50%" y="50%" text-anchor="middle" dy=".3em" fill="%23999">Image Failed</text></svg>';
                  }}
                  crossOrigin="anonymous"
                  referrerPolicy="no-referrer"
                />

                <a
                  href={item.imageUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="absolute inset-0 z-20"
                >
                  <span className="sr-only">View full image</span>
                </a>

                <p className="absolute bottom-0 right-0 text-xs bg-black/50 backdrop-blur text-white px-4 py-1 rounded-tl-xl opacity-0 group-hover:opacity-100 transition duration-300 z-10">
                  Created by {item.userName || "Unknown"}
                </p>
              </div>
            );
          })}
        </div>
      ) : (
        <div className="text-center mt-20">
          <p className="text-gray-600 dark:text-purple-200 text-lg">
            No images available yet.
          </p>
          <p className="text-gray-500 dark:text-purple-300 text-sm mt-2">
            Generate some images and publish them to see them here!
          </p>
        </div>
      )}
    </div>
  );
}

export default Community;
